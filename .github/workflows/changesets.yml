name: Changesets

on:
  push:
    branches:
      - main

env:
  CI: true
  HUSKY: 0

jobs:
  version:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      has_changes: ${{ steps.changesets.outputs.hasChangesets }}
      pr_number: ${{ steps.changesets.outputs.pullRequestNumber }}
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      
      - name: Setup node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install
      
      - name: Disable Git hooks
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Method 1: Replace hooks directory with empty one
          mkdir -p /tmp/empty-hooks
          git config --global core.hooksPath /tmp/empty-hooks
      
      - name: Create and publish versions
        id: changesets
        uses: changesets/action@v1
        with:
          commit: "ci: Release version update"
          title: "Release version update"
          publish: "pnpm build"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HUSKY: 0
      
      - name: Generate documentation for PR
        if: steps.changesets.outputs.hasChangesets == 'true'
        run: |
          echo "Changesets created a PR #${{ steps.changesets.outputs.pullRequestNumber }}"
          
          # Get the branch name that changesets created
          CHANGESET_BRANCH=$(gh pr view ${{ steps.changesets.outputs.pullRequestNumber }} --json headRefName -q .headRefName)
          echo "Changesets branch: $CHANGESET_BRANCH"
          
          # Checkout that branch
          git fetch origin $CHANGESET_BRANCH
          git checkout $CHANGESET_BRANCH
          
          # Generate documentation
          pnpm typedoc

          # Verify docs were generated properly
          if [ ! -f "./docs/index.html" ]; then
            echo "Documentation generation failed!"
            exit 1
          fi
          
          # Commit and push the documentation changes
          git add docs/
          git commit -m "docs: Update documentation for release" || echo "No documentation changes to commit"
          git push origin $CHANGESET_BRANCH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
